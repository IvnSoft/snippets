#!/bin/sh -e

PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin";
ROUTES="/etc/default/routes";
IP_ROUTE="/sbin/ip route";
IPCALC="/usr/bin/ipcalc";
NET=$2;
GW=$3;
NO_IPCALC_RETURN=1;

. /lib/lsb/init-functions;

[ -f $IPCALC ] || $IPCALC="";

check_NET() {
    if [ $IPCALC ]; then

        ### CHECKING NET
        if $IPCALC $NET | grep -i "INVALID\|Usage" &>/dev/null; then
            log_warning_msg "Invalid network: $NET";
            return 1;
        fi

        ### READING AND CHECKING THE NETWORK FROM IPCALC
        TMP_NET=`$IPCALC $NET | grep -i "Network:" | awk '{print $2}'`;
        if [ "$TMP_NET" != "$NET" ]; then
            
            ### ASK THE USER TO ACCEPT THE SUGGESTED NETWORK
            echo -n " > Do you mean ${TMP_NET} ? [y/N] ";
            if [ "`read a; echo $a`" = "y" ]; then
                NET=$TMP_NET;
                return 0;
            else
                log_warning_msg "Invalid network";
                return 1;
            fi

        ### NET IS OK
        else
            return 0;
        fi

    else
        log_warning_msg "ipcalc is missing. Cannot check $NET";
        return $NO_IPCALC_RETURN;
    fi
}

check_GW() {
    if [ $IPCALC ]; then

        ### CHECK THE IP ADDRESS
        if ipcalc $GW | grep "INVALID\|Usage" &>/dev/null; then
            log_warning_msg "Invalid IP: $GW";
            return 1;
        else
            return 0;
        fi

    else
        log_warning_msg "ipcalc is missing. Cannot check $GW";
        return $NO_IPCALC_RETURN;
    fi
}

add_net() {
    log_begin_msg "Adding $1 via $2";
    ( $IP_ROUTE add $1 via $2 &>/dev/null )
    EXIT=$?;
    ( log_end_msg $EXIT;                  )
    return $EXIT;
}

del_net() {
    log_begin_msg "Deleting $1";
    ( $IP_ROUTE del $1 &>/dev/null )
    EXIT=$?;
    ( log_end_msg $EXIT;           )
    return $EXIT;
}


case "$1" in

    start)
        log_action_begin_msg "Configuring network routes";

        ### ADD ROUTES
        cat $ROUTES | while read line; do
            ( add_net $line; )
        done
    ;;

    stop)
        log_action_begin_msg "Bringing network routes down";

        ### REMOVE ROUTES
        cat $ROUTES | while read line; do
            ( del_net $line; )
        done
    ;;

    add)
        check_NET || exit 1;
        check_GW  || exit 2;

        ### ADD NEW ROUTE, UNLESS EXISTING
        if grep "$NET" $ROUTES &>/dev/null; then
            log_warning_msg "Rule exists for $NET";
        else 
            add_net "$NET" "$GW" && echo "$NET $GW" >> $ROUTES;
        fi
    ;;

    del)
        check_NET || exit 1;

        ### REMOVE ROUTE, IF IT EXISTS
        if grep "$NET" $ROUTES &>/dev/null; then
            NET_DEL=`echo $NET | sed 's/\/[0-9]\+//'`;
            sed -i "/$NET_DEL/d" $ROUTES;
            del_net "$NET";
        else
            log_warning_msg "Rule does not exist: net $NET";
        fi
    ;;

    *)
        echo "Usage: /etc/init.d/route {start|stop|add|del}";
        echo " add <network/netmask> <gateway>";
        echo " del <network/netmask>";
        exit 1
    ;;
esac

exit 0;

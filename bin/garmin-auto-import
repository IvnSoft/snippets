#!/usr/bin/perl
use strict;
use warnings;

my $garmin_sync_app = require_exe_or_die('garmin-sync');
my $zenity_app = require_exe_or_die('zenity');
my $nautilus_app = require_exe_or_die('nautilus');

require_or_die('Device::USB');
require_or_die('Getopt::Long::Descriptive');
require_or_die('IPC::Run3');

my($opt, $usage) = Getopt::Long::Descriptive::describe_options(
                       'garmin-auto-import <some-arg>',
                       [],
                       [ 'vendor=s', "The vendor USB ID", { default => '091e' } ],
                       [ 'product=s', "The product USB ID", { default => '0003' } ],
                       [ 'output-dir=s', "Output directory for .tcx files", { default => join '/', $ENV{'HOME'}, 'Documents', 'garmin' } ],
                       [],
                       [ 'help', "print usage message and exit" ],
                   );

if($opt->help) {
    sdie('%s', $usage->text);
}

my $usb = Device::USB->new;
my @usb_id = map { hex $_ } @$opt{qw/ vendor product/};
my $connected = 0;

unless(-d $opt->output_dir) {
    mkdir $opt->output_dir or sdie('Failed to create %s: %s', $opt->output_dir, $!);
}

while(1) {
    if(!$usb->find_device(@usb_id)) {
        $connected = 0;
    }
    elsif(!$connected) {
        $connected = 1;
        sleep 2; # init device...
        on_connect(@usb_id);
    }
    sleep 1;
}

sub on_connect {
    chdir $opt->output_dir or sdie('Failed to change directory to %s: %s', $opt->output_dir, $!);
    symlink '.', 'exports' or warn "Failed to create symlink ./exports: $!";

    my $status_pid = zenity_sync_started();
    my $exit_value = system $garmin_sync_app;
    kill 15, $status_pid or warn "Could not kill $status_pid";

    unlink 'exports' or warn "Failed to remove symlink ./exports: $!";
    return $exit_value ? zenity_sync_failed() : zenity_sync_success();
}

sub zenity_sync_started {
    my $pid = fork;
    return $pid if($pid);
    exec zenity => '--info', "--text=You have just inserted a Garmin device.\n\nImport of data has started...";
    die $!;
}

sub zenity_sync_success {
    my @zenity = (
                    'zenity',
                    '--list',
                    '--hide-header',
                    '--multiple',
                    '--column=Selection',
                    "--separator=\n",
                    "--text=Garmin import was successful!\n\nPlease select actions from the list below:",
                 );

    my %options = (
        'Open http://connect.garmin.com/transfer/upload' => 'gnome-open http://connect.garmin.com/transfer/upload',
        'Open ' .$opt->output_dir, 'nautilus ' .$opt->output_dir,
    );

    IPC::Run3::run3(\@zenity,
        \join("\n", keys %options), # stdin
        \my @selections,            # stdout
        \undef,                     # stderr
    );

    for(@selections) {
        chomp;
        fork or exec $options{$_};
    }
}

sub zenity_sync_failed {
    system zenity =>
        '--error',
        '--text=Could not import data from Garmin device!'
        ;
}

sub sdie {
    die sprintf shift(@_) ."\n", @_;
}

sub require_exe_or_die {
    my $exe = shift;
    return $exe if(grep { -x "$_/$exe" } split /:/, $ENV{'PATH'});
    die <<"MISSING";
    Required binaries:

    * garmin-sync
      Can be downloaded from://launchpad.net/garmin-sync 

    * nautilus
    \$ sudo apt-get install nautilus

    * zenity
    \$ sudo apt-get install zenity

    =================================================================
    Required binary missing: $exe
    =================================================================

MISSING
}

sub require_or_die {
    my $module = shift;
    return $module if(eval "require $module; 1");
    die <<"MISSING";

    Running ubuntu/debian? Install the module using the command below:

    \$ sudo apt-get install \
        getopt-long-descriptive \
        libdevice-usb-perl \
        libipc-run3-perl \
        ;

    =================================================================
    Require module missing: $module
    =================================================================

MISSING
}

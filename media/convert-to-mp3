#!/usr/bin/perl

use feature qw/say/;
use autodie;
use strict;
use warnings;

$ENV{'CONVERT_MPLAYER'} ||= '/usr/bin/mplayer';
$ENV{'CONVERT_LAME'} ||= '/usr/bin/lame';
$ENV{'COLUMNS'} ||= 79;

eval "use File::Find::Rule; 1" or die "File::Find::Rule is required\n";
eval "use File::Temp; 1" or die "File::Temp is required\n";
-x $ENV{'CONVERT_MPLAYER'} or die 'CONVERT_MPLAYER does not hold an executable path';
-x $ENV{'CONVERT_LAME'} or die 'CONVERT_LAME does not hold an executable path';

my $tmp = File::Temp->new( unlink_on_destroy => 1 );
my $ext = shift or die "Usage: $0 <extension>\n";
my $rule = File::Find::Rule
            ->file
            ->name("*\.$ext")
            ->start('.');

FILE:
while(my $file = $rule->match) {
    my $mp3 = $file;
    
    $mp3 =~ s/\.$ext/.mp3/;

    if($mp3 eq $file) {
        next FILE;
    }

    say ">> mplayer '$file' -ao pcm:file='$tmp'";
    system $ENV{'CONVERT_MPLAYER'} => '-really-quiet' => $file => -ao => qq(pcm:file="$tmp");

    if($? != 0) {
        say "\n!! mplayer failed to convert input file to pcm";
        unlink $mp3 if -e $mp3;
        last FILE;
    }

    say ">> lame '$tmp' '$mp3'";
    system $ENV{'CONVERT_LAME'} => $tmp => $mp3;

    if($? != 0) {
        say "\n!! lame failed to convert temp file to mp3";
        unlink $mp3 if -e $mp3;
        last FILE;
    }

    if(300_000 < -s $mp3) {
        say ">> Will unlink original file";
        unlink $file;
    }

    say '-' x $ENV{'COLUMNS'};
}

exit $? || 0;
